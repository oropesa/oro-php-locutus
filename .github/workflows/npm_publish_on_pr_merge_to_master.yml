name: Tag, Release, and Publish on PR Merge to Master

on:
  pull_request:
    types:
      - closed

jobs:
  branch_master:
    runs-on: ubuntu-latest
    steps:
      - name: "Check PR Merge Status on Master"
        if: github.event.pull_request.base.ref == 'master' && github.event.pull_request.merged == true
        run: echo "MASTER_IS_MERGED=true" >> $GITHUB_ENV

  project_version:
    runs-on: ubuntu-latest
    needs: branch_master
    outputs:
      PROJECT_VERSION: ${{ steps.get_version.outputs.version }}
    steps:
      - name: "Checkout Code"
        if: ${{ env.MASTER_IS_MERGED }} == 'true'
        uses: actions/checkout@v3

      - name: "Install Node.js and jq"
        if: ${{ env.MASTER_IS_MERGED }} == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: "Get Version from package.json"
        if: ${{ env.MASTER_IS_MERGED }} == 'true'
        id: get_version
        run: echo "version=$(jq -r .version ./package.json)" >> $GITHUB_OUTPUT

      - name: "Check if Tag Exists"
        if: ${{ env.MASTER_IS_MERGED }} == 'true'
        run: |
          if [ $(git tag -l "v${{ steps.get_version.outputs.version }}") ]; then
            echo "::error::Tag v${{ steps.get_version.outputs.version }} already exists." && exit 1
          fi

  tag:
    runs-on: ubuntu-latest
    needs: project_version
    outputs:
      PROJECT_VERSION: ${{needs.project_version.outputs.PROJECT_VERSION}}
    steps:
      - name: "Checkout Code"
        if: ${{ env.MASTER_IS_MERGED }} == 'true'
        uses: actions/checkout@v3

      - name: "Create and Push Tag"
        if: ${{ env.MASTER_IS_MERGED }} == 'true'
        env:
          PROJECT_VERSION: ${{needs.project_version.outputs.PROJECT_VERSION}}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag -a "v${{ env.PROJECT_VERSION }}" -m "Release v${{ env.PROJECT_VERSION }}"
          git push origin "v${{ env.PROJECT_VERSION }}"

  release:
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - name: "Checkout Code"
        if: ${{ env.MASTER_IS_MERGED }} == 'true'
        uses: actions/checkout@v3

      - name: "Install Node.js"
        if: ${{ env.MASTER_IS_MERGED }} == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: "Install Dependencies"
        if: ${{ env.MASTER_IS_MERGED }} == 'true'
        run: npm install

      - name: "Run Build"
        if: ${{ env.MASTER_IS_MERGED }} == 'true'
        run: npm run build

      - name: "Create GitHub Release"
        if: ${{ env.MASTER_IS_MERGED }} == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PROJECT_VERSION: ${{needs.tag.outputs.PROJECT_VERSION}}
        run: |
          CHANGELOG="$(awk '/^## ${{ env.PROJECT_VERSION }}/{found=1} found{if (/^##/) if(++count==2) exit; print}' CHANGELOG.md)"
          gh release create "v${{ env.PROJECT_VERSION }}" --title "Release v${{ env.PROJECT_VERSION }}" --notes "$CHANGELOG"

  publish:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: "Checkout Code"
        if: ${{ env.MASTER_IS_MERGED }} == 'true'
        uses: actions/checkout@v3

      - name: "Install Node.js"
        if: ${{ env.MASTER_IS_MERGED }} == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: "Install Dependencies"
        if: ${{ env.MASTER_IS_MERGED }} == 'true'
        run: npm install

      - name: "Run Build"
        if: ${{ env.MASTER_IS_MERGED }} == 'true'
        run: npm run build

      - name: "Publish as NPM Package"
        if: ${{ env.MASTER_IS_MERGED }} == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" > ~/.npmrc
          npm publish
